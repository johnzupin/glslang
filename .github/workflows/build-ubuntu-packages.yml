name: build-focal-package
run-name: Build Debian style packages for Ubuntu
on:
  push:
  workflow_call:
    inputs:
      spirv_headers:
        required: false
        type: string
        default: '{"repo":"","ref":""}'
      spirv_tools:
        required: false
        type: string
        default: '{"repo":"","ref":""}'
      glslang:
        required: true
        type: string
        default: '{"repo":"johnzupin/glslang","ref":"ubunut/focal"}'
  workflow_dispatch:
    inputs:
      spirv_headers:
        required: false
        type: string
        default: '{"repo":"","ref":""}'
      spirv_tools:
        required: false
        type: string
        default: '{"repo":"","ref":""}'
      glslang:
        required: true
        type: string
        default: '{"repo":"johnzupin/glslang","ref":"ubunut/focal"}'

jobs:
  get-glslang-deps-refs:
    runs-on: ubuntu-latest
    outputs:
      spirv-headers-repo: ${{ steps.parse-deps.outputs.SPV_HEADERS_REPO }}
      spirv-headers-ref: ${{ steps.parse-deps.outputs.SPV_HEADERS_REF }}
      spirv-tools-repo: ${{ steps.parse-deps.outputs.SPV_TOOLS_REPO }}
      spirv-tools-ref: ${{ steps.parse-deps.outputs.SPV_TOOLS_REF }}
      glslang-repo: ${{ steps.parse-deps.outputs.GLSLANG_REPO }}
      glslang-ref: ${{ steps.parse-deps.outputs.GLSLANG_REF }}
    steps:
      - if: ${{ inputs.glslang != '' }}
        run: |
          echo SPV_HEADERS_REPO="${{ fromJSON(inputs.spirv_headers).repo }}" >> "$GITHUB_ENV"
          echo SPV_HEADERS_REF="${{ fromJSON(inputs.spirv_headers).ref }}" >> "$GITHUB_ENV"
          echo SPV_TOOLS_REPO="${{ fromJSON(inputs.spirv_tools).repo }}" >> "$GITHUB_ENV"
          echo SPV_TOOLS_REF="${{ fromJSON(inputs.spirv_tools).ref }}" >> "$GITHUB_ENV"
          echo GLSLANG_REPO="${{ fromJSON(inputs.glslang).repo }}" >> "$GITHUB_ENV"
          echo GLSLANG_REF="${{ fromJSON(inputs.glslang).ref }}" >> "$GITHUB_ENV"
      - if: ${{ inputs.glslang == '' }}
        uses: actions/checkout@v3
      - if: ${{ inputs.glslang == '' }}
        run: |
          echo "Inputs not specified - Running as a push event"
          # WARNING: the spirv-headers/spirv-tools repo is hardcoded to johnzupin org, this needs to change to Khronos when /debian gets merged
          echo SPV_HEADERS_REPO="johnzupin/SPIRV-Headers" >> "$GITHUB_ENV"
          echo SPV_HEADERS_REF=`jq -r '.commits[1].commit' known_good.json` >> "$GITHUB_ENV"
          echo SPV_TOOLS_REPO="johnzupin/SPIRV-Tools" >> "$GITHUB_ENV"
          echo SPV_TOOLS_REF=`jq -r '.commits[0].commit' known_good.json` >> "$GITHUB_ENV"
          echo GLSLANG_REPO="$GITHUB_REPOSITORY" >> "$GITHUB_ENV"
          echo GLSLANG_REF="$GITHUB_REF_NAME" >> "$GITHUB_ENV"
      - id: parse-deps
        run: |
          echo SPV_HEADERS_REPO="${{ env.SPV_HEADERS_REPO }}" >> "$GITHUB_OUTPUT"
          echo SPV_HEADERS_REF="${{ env.SPV_HEADERS_REF }}" >> "$GITHUB_OUTPUT"
          echo SPV_TOOLS_REPO="${{ env.SPV_TOOLS_REPO }}" >> "$GITHUB_OUTPUT"
          echo SPV_TOOLS_RE="${{ env.SPV_TOOLS_REF }}" >> "$GITHUB_OUTPUT"
          echo GLSLANG_REPO="${{ env.GLSLANG_REPO }}" >> "$GITHUB_OUTPUT"
          echo GLSLANG_REF="${{ env.GLSLANG_REF }}" >> "$GITHUB_OUTPUT"
      - run: echo "Using SPIRV_HEADERS_REF=$SPV_HEADERS_REF and SPIRV_TOOLS_REF=$SPV_TOOLS_REF"

  build-spirv-headers-package:
    needs: "get-glslang-deps-refs"
    if: ${{ needs.get-glslang-deps-refs.outputs.spirv-headers-repo != '' && needs.get-glslang-deps-refs.outputs.spirv-headers-ref != '' }}
    uses: johnzupin/SPIRV-Headers/.github/workflows/build-ubuntu-packages.yml@zupin_create_workflow_ubuntu_package
    with:
      spirv_headers: '{"repo":"${{needs.get-glslang-deps-refs.outputs.spirv-headers-repo}}","ref":"${{needs.get-glslang-deps-refs.outputs.spirv-headers-ref}}"}'

  build-spirv-tools-package:
    needs: [ "get-glslang-deps-refs", "build-spirv-headers-package" ]
    if: ${{ needs.get-glslang-deps-refs.outputs.spirv-tools-repo != '' && needs.get-glslang-deps-refs.outputs.spirv-tools-ref != '' }}
    uses: johnzupin/SPIRV-Tools/.github/workflows/build-ubuntu-packages.yml@zupin_create_workflow_ubuntu_package
    with:
      spirv_tools: '{"repo":"${{needs.get-glslang-deps-refs.outputs.spirv-tools-repo}}","ref":"${{needs.get-glslang-deps-refs.outputs.spirv-tools-ref}}"}'

  build-glslang-amd64-focal-package:
    needs: [ "get-glslang-deps-refs", "build-spirv-headers-package", "build-spirv-tools-package" ]
    if: ${{ needs.build-spirv-headers-package.result == 'skipped' || needs.build-spirv-tools-package.result == 'skipped' || success() }}
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: "spirv-headers-focal-package"
          path: "/tmp/"
      - uses: actions/download-artifact@v3
        with:
          name: "spirv-tools-focal-package"
          path: "/tmp/"
      - run: "apt-get install -y /tmp/spirv-headers*20.04*.deb /tmp/spirv-tools*20.04*.deb"
      - run: |
          apt-get update && \
          DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y \
          wget git cmake build-essential git-buildpackage debhelper
      - uses: actions/checkout@v3
        with:
          repository: "${{needs.get-glslang-deps-refs.outputs.glslang-repo}}"
          ref: "${{needs.get-glslang-deps-refs.outputs.glslang-ref}}"
      - run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - run: gbp buildpackage --git-verbose --git-force-create --git-upstream-tree="branch" --git-ignore-branch --git-upstream-branch="${{needs.get-glslang-deps-refs.outputs.glslang-ref}}" --no-sign
      - run: "ls -l $RUNNER_WORKSPACE"
      - uses: actions/upload-artifact@v3
        with:
          name: "glslang-focal-package"
          path: "${{ runner.workspace }}/glslang*20.04*amd64.deb"
