name: build-focal-package
run-name: Build Debian style packages for Ubuntu
on:
  push:
  workflow_call:
    inputs:
      glslang-repo:
        required: true
        type: string
      glslang-ref:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      glslang-repo:
        required: true
        type: string
      glslang-ref:
        required: true
        type: string

jobs:
  get-glslang-deps-refs:
    runs-on: ubuntu-latest
    outputs:
      spirv-headers-repo: ${{ steps.parse-deps.outputs.SPV_HEADERS_REPO }}
      spirv-headers-ref: ${{ steps.parse-deps.outputs.SPV_HEADERS_REF }}
      spirv-tools-repo: ${{ steps.parse-deps.outputs.SPV_TOOLS_REPO }}
      spirv-tools-ref: ${{ steps.parse-deps.outputs.SPV_TOOLS_REF }}
      glslang-repo: ${{ steps.parse-deps.outputs.GLSLANG_REPO }}
      glslang-ref: ${{ steps.parse-deps.outputs.GLSLANG_REF }}
    steps:
      - name: "Glslang repo and ref specified - getting SPIRV-Tools and SPIRV-Headers versions"
        if: ${{ inputs.glslang != '' }}
        run: |
          echo SPV_HEADERS_REPO="KhronosGroup/SPIRV-Headers" >> "$GITHUB_ENV"
          echo SPV_HEADERS_REF=`jq -r '.commits[1].commit' known_good.json` >> "$GITHUB_ENV"
          echo SPV_TOOLS_REPO="KhronosGroup/SPIRV-Tools" >> "$GITHUB_ENV"
          echo SPV_TOOLS_REF=`jq -r '.commits[0].commit' known_good.json` >> "$GITHUB_ENV"
          echo GLSLANG_REPO="${{ inputs.glslang-repo }}" >> "$GITHUB_ENV"
          echo GLSLANG_REF="${{ inputs.glslang-ref }}" >> "$GITHUB_ENV"
      - if: ${{ inputs.glslang == '' }}
        uses: actions/checkout@v4
      - name: "Glslang repo and ref not specified - getting SPIRV-Tools and SPIRV-Headers versions"
        if: ${{ inputs.glslang == '' }}
        run: |
          echo SPV_HEADERS_REPO="KhronosGroup/SPIRV-Headers" >> "$GITHUB_ENV"
          echo SPV_HEADERS_REF=`jq -r '.commits[1].commit' known_good.json` >> "$GITHUB_ENV"
          echo SPV_TOOLS_REPO="KhronosGroup/SPIRV-Tools" >> "$GITHUB_ENV"
          echo SPV_TOOLS_REF=`jq -r '.commits[0].commit' known_good.json` >> "$GITHUB_ENV"
          echo GLSLANG_REPO="$GITHUB_REPOSITORY" >> "$GITHUB_ENV"
          echo GLSLANG_REF="$GITHUB_REF_NAME" >> "$GITHUB_ENV"
      - id: parse-deps
        run: |
          echo SPV_HEADERS_REPO="${{ env.SPV_HEADERS_REPO }}" >> "$GITHUB_OUTPUT"
          echo SPV_HEADERS_REF="${{ env.SPV_HEADERS_REF }}" >> "$GITHUB_OUTPUT"
          echo SPV_TOOLS_REPO="${{ env.SPV_TOOLS_REPO }}" >> "$GITHUB_OUTPUT"
          echo SPV_TOOLS_REF="${{ env.SPV_TOOLS_REF }}" >> "$GITHUB_OUTPUT"
          echo GLSLANG_REPO="${{ env.GLSLANG_REPO }}" >> "$GITHUB_OUTPUT"
          echo GLSLANG_REF="${{ env.GLSLANG_REF }}" >> "$GITHUB_OUTPUT"
      - run: echo "Using SPIRV_HEADERS_REF=$SPV_HEADERS_REF and SPIRV_TOOLS_REF=$SPV_TOOLS_REF"

  # build-spirv-headers-package:
  #   needs: "get-glslang-deps-refs"
  #   if: ${{ needs.get-glslang-deps-refs.outputs.spirv-headers-repo != '' && needs.get-glslang-deps-refs.outputs.spirv-headers-ref != '' }}
  #   uses: johnzupin/SPIRV-Headers/.github/workflows/build-ubuntu-packages.yml@zupin_create_workflow_ubuntu_package
  #   with:
  #     spirv_headers: '{"repo":"${{needs.get-glslang-deps-refs.outputs.spirv-headers-repo}}","ref":"${{needs.get-glslang-deps-refs.outputs.spirv-headers-ref}}"}'

  # build-spirv-tools-package:
  #   needs: [ "get-glslang-deps-refs", "build-spirv-headers-package" ]
  #   if: ${{ needs.get-glslang-deps-refs.outputs.spirv-tools-repo != '' && needs.get-glslang-deps-refs.outputs.spirv-tools-ref != '' }}
  #   uses: johnzupin/SPIRV-Tools/.github/workflows/build-ubuntu-packages.yml@zupin_create_workflow_ubuntu_package
  #   with:
  #     spirv_tools: '{"repo":"${{needs.get-glslang-deps-refs.outputs.spirv-tools-repo}}","ref":"${{needs.get-glslang-deps-refs.outputs.spirv-tools-ref}}"}'

  build-glslang-amd64-focal-package:
    needs: [ "get-glslang-deps-refs" ] #, "build-spirv-headers-package", "build-spirv-tools-package" ]
    #if: ${{ needs.build-spirv-headers-package.result == 'skipped' || needs.build-spirv-tools-package.result == 'skipped' || success() }}
    runs-on: ubuntu-20.04
    steps:
      # - uses: actions/download-artifact@v3
      #   with:
      #     name: "spirv-headers-focal-package"
      #     path: "/tmp/"
      # - uses: actions/download-artifact@v3
      #   with:
      #     name: "spirv-tools-focal-package"
      #     path: "/tmp/"
      # - run: "apt-get install -y /tmp/spirv-headers*20.04*.deb /tmp/spirv-tools*20.04*.deb"
      - name: "Install CMake using KitWare's repo"
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gpg
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc | gpg --dearmor - | sudo tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
          echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | sudo tee /etc/apt/sources.list.d/kitware.list
      - name: "Update and Install build dependencies"
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y wget git cmake build-essential git-buildpackage debhelper
      - name: "Checkout SPIRV-Headers"
        uses: actions/checkout@v4
        with:
          path: ${{github.workspace}}/SPIRV-Headers
          repository: "${{needs.get-glslang-deps-refs.outputs.spirv-headers-repo}}"
          ref: "${{needs.get-glslang-deps-refs.outputs.spirv-headers-ref}}"
      - name: "Build SPIRV-Headers"
        run: |
          cmake -S ${{github.workspace}}/SPIRV-Headers -B ${{github.workspace}}/SPIRV-Headers -DCMAKE_BUILD_TYPE="Release"
          sudo cmake --install ${{github.workspace}}/SPIRV-Headers --prefix /usr
      - name: "Checkout SPIRV-Tools"
        uses: actions/checkout@v4
        with:
          path: ${{github.workspace}}/SPIRV-Tools
          repository: "${{needs.get-glslang-deps-refs.outputs.spirv-tools-repo}}"
          ref: "${{needs.get-glslang-deps-refs.outputs.spirv-tools-ref}}"
      - name: "Build SPIRV-Tools"
        run: |
          cmake -S ${{github.workspace}}/SPIRV-Tools -B ${{github.workspace}}/SPIRV-Tools -DCMAKE_BUILD_TYPE="Release" -DSPIRV-Headers_SOURCE_DIR="/usr" -DSPIRV_SKIP_TESTS="ON"
          cmake --build ${{github.workspace}}/SPIRV-Tools
          sudo cmake --install ${{github.workspace}}/SPIRV-Tools --prefix /usr
      - uses: actions/checkout@v4
        with:
          repository: "${{needs.get-glslang-deps-refs.outputs.glslang-repo}}"
          ref: "${{needs.get-glslang-deps-refs.outputs.glslang-ref}}"
      - run: gbp buildpackage --git-verbose --git-force-create --git-upstream-tree="branch" --git-ignore-branch --git-upstream-branch="${{needs.get-glslang-deps-refs.outputs.glslang-ref}}" --no-sign --no-check-builddeps
      - uses: actions/upload-artifact@v4
        with:
          name: "glslang-focal-package"
          path: "${{ runner.workspace }}/glslang*20.04*amd64.deb"
